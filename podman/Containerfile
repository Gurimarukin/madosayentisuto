FROM node:20-alpine as base

# Install dependencies only when needed
FROM base AS deps
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat make gcc libc-dev libtool autoconf automake g++ python3

WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json yarn.lock* ./

ENV YOUTUBE_DL_SKIP_DOWNLOAD true

RUN yarn --frozen-lockfile

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

ENV YTDLP_PATH /app/yt-dlp

RUN yarn build

# Production image, copy all the files and run app
FROM base AS runner
WORKDIR /app

RUN apk add --no-cache ffmpeg python3 bash

COPY --from=builder /app/dist ./dist
COPY --from=builder /app/resources ./resources
COPY --from=builder /app/tsbuild ./tsbuild
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./
COPY --from=builder /app/yarn.lock ./
COPY --from=builder /app/yt-dlp ./
COPY --from=builder /app/podman/entrypoint.sh ./

ENV NODE_ENV production

ENV APP_DATA_VOLUME /app/data

RUN chmod +x /app/yt-dlp
RUN /app/yt-dlp --version

EXPOSE 8675

CMD ./entrypoint.sh
